/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */


plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
	// Allows the library to be published to maven local.
	id 'maven-publish'
}

sourceCompatibility = '17' //java version
targetCompatibility = '17' //java version

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
	// Use the 'caching' module
	api project(':caching')
    api project(':library')
}

archivesBaseName = 'ECertisClient' //name of built jar
version = '1.0.0' //version of jar

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes ('Implementation-Title': project.archivesBaseName,
	 	'Implementation-Version': project.version)
	 }
	from {
		//configurations.jsonLib.collect { it.isDirectory() ? it : zipTree(it) } //includes the jsonLib group libraries in the jar
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }

		//configurations.compileClasspath.filter { it.name.endsWith('jar') }.collect { zipTree(it) }
	}
}

tasks.named('test') {
	// Use JUnit Platform for unit tests.
	useJUnitPlatform()
}

// Publishing the library to the local maven repository
group = 'com.github.koutsioj'
version = project.version

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		mavenLocal()
	}
}

//publishing the library automatically whenever assemble or build tasks are executed
tasks.assemble.dependsOn(tasks.publishToMavenLocal)
tasks.build.dependsOn(tasks.publishToMavenLocal)


