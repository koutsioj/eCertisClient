/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */


plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    // Allows the library to be published to maven local.
    id 'maven-publish'
}

sourceCompatibility = '17' //java version
targetCompatibility = '17' //java version

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the 'caching' module
    api project(':caching')

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    // https://mvnrepository.com/artifact/io.rest-assured/rest-assured
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest
    testImplementation 'org.hamcrest:hamcrest:2.2'
    //wiremock for testing
    testImplementation "com.github.tomakehurst:wiremock-jre8:2.35.0"

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.1'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.1'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Publishing the library to the local maven repository
group = 'com.github.koutsioj'
version = '1.0.0'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

//publishing the library automatically whenever assemble or build tasks are executed
    tasks.assemble.dependsOn(tasks.publishToMavenLocal)
    tasks.build.dependsOn(tasks.publishToMavenLocal)

